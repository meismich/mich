# File:			routers.cfg
# Date:			2011-10-15
# Author:		Michael Spence

# Appropriate for files in nagios/objects/rtrs

#--- Hosts Templates

define host{
	name			generic-router
	use			generic-host
	contact_groups		admins
	icon_image		router.png
	statusmap_image		router.png
	parents			apeqempr01c28.ims.telstra.com.au
	register		0
	}

define host{
	name			gen_c1841
	use			generic-router
	hostgroups		rtr_c1841
	register		0
	}

define host{
	name			gen_c1941
	use			generic-router
	hostgroups		rtr_c1941
	register		0
	}

define host{
	name			gen_c2621
	use			generic-router
	hostgroups		rtr_c2621
	register		0
	}

define host{
	name			gen_c2811
	use			generic-router
	hostgroups		rtr_c2811
	register		0
	}

define host{
	name			gen_c2821
	use			generic-router
	hostgroups		rtr_c2821
	register		0
	}

define host{
	name			gen_c2911
	use			generic-router
	hostgroups		rtr_c2911
	register		0
	}

define host{
	name			core_c2911
	use			generic-host
	hostgroups		rtr_c2911
	contact_groups		admins
	icon_image		router.png
	statusmap_image		router.png
	register		0
	}
	
#--- Host Groups

# WAN router hostgroup
define hostgroup{
        hostgroup_name  wan_routers
        alias           WAN Routers
	register	0
        }

define hostgroup{
	hostgroup_name		rtr_c1841
	alias			CISCO 1841 ROUTER
	register 		0
	}

define hostgroup{
	hostgroup_name		rtr_c1941
	alias			CISCO 1941 ROUTER
	register 		0
	}

define hostgroup{
	hostgroup_name		rtr_c2621
	alias			CISCO 2621 ROUTER
	register 		0
	}

define hostgroup{
	hostgroup_name		rtr_c2811
	alias			CISCO 2811 ROUTER
	register 		0
	}

define hostgroup{
	hostgroup_name		rtr_c2821
	alias			CISCO 2821 ROUTER
	register 		0
	}

define hostgroup{
	hostgroup_name		rtr_c2911
	alias			CISCO 2911 ROUTER
	register 		0
	}

#--- Services

#-- Generic to all

define service{
	use			generic-service,srv-mrtg
        hostgroup_name          rtr_c1841,rtr_c1941,rtr_c2621,rtr_c2811,rtr_c2821,rtr_c2911
	service_description	Average Bandwidth
	passive_checks_enabled	1
	check_command		check_local_mrtgtraf!AVG
	}

# Ping Test (isn't this done through "host-alive"?)
define service{
        use                     generic-service
        hostgroup_name          rtr_c1841,rtr_c1941,rtr_c2621,rtr_c2811,rtr_c2821,rtr_c2911
        service_description     Ping Test
        check_command           check_ping!1000.0,80%!2000.0,100%
        }

# Uptime via SNMP
define service{
        use                     generic-service
        hostgroup_name          rtr_c1841,rtr_c1941,rtr_c2621,rtr_c2811,rtr_c2821,rtr_c2911
        service_description     Uptime
        check_command           check_snmp!-C apsnmpro -o sysUpTime.0 -l TIME
        }

define service{
        use                     generic-service
        hostgroup_name          rtr_c1841,rtr_c1941,rtr_c2811,rtr_c2821,rtr_c2911
        service_description     Fan State
        check_command           check_snmp_cx!FAN!1!CISCO-ENVMON-MIB!ciscoEnvMonFanState.1!1!@2:5!@3:4!
        }

define service{
        use                     generic-service
        hostgroup_name          rtr_c1941,rtr_c2621,rtr_c2811,rtr_c2821,rtr_c2911
        service_description     CPU Temp State
        check_command           check_snmp_cx!TEMP!1!CISCO-ENVMON-MIB!ciscoEnvMonTemperatureState.1!1!@2:5!@3:4!
        }

define service{
        use                     generic-service
        hostgroup_name          rtr_c1941,rtr_c2911
        service_description     Voltage State
        check_command           check_snmp_cx!VOLT!1!CISCO-ENVMON-MIB!ciscoEnvMonVoltageState.1!1!@2:5!@3:4!
        }

define service{
        use                     generic-service
        hostgroup_name          rtr_c1941,rtr_c2621,rtr_c2811,rtr_c2821,rtr_c2911
        service_description     Supply State
        check_command           check_snmp_cx!PSU!1!CISCO-ENVMON-MIB!ciscoEnvMonSupplyState.1!1!@2:5!@3:4!
        }

